#Regression

import tensorflow as tf
import numpy as np
import pandas as pd
from sklearn.metrics import mean_squared_error, accuracy_score, precision_score, recall_score, f1_score

data = pd.read_csv('weatherHistory.csv')
xs = data[['Humidity','Wind Speed (km/h)']].values
ys = data['Apparent Temperature (C)'].values
xs = np.array(xs)
ys = np.array(ys)

model = tf.keras.Sequential([tf.keras.layers.Input(shape=(2,)),tf.keras.layers.Dense(64, activation='relu'),tf.keras.layers.Dense(1)])
model.compile(optimizer='sgd', loss='mean_squared_error')
model.fit(xs, ys, epochs=10)
predictions = model.predict(xs)

mse = mean_squared_error(ys, predictions)
print("Regression Results:")
print("Mean Squared Error:", mse)
print("-" * 20)  

#Classification

import tensorflow as tf
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder

data = pd.read_csv('survey lung cancer.csv')
X = data.drop('LUNG_CANCER', axis=1)
y = data['LUNG_CANCER']
label_encoder = LabelEncoder()

for col in X.columns:
    if X[col].dtype == 'object':
        X[col] = label_encoder.fit_transform(X[col])
y = label_encoder.fit_transform(y)
x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = tf.keras.models.Sequential([tf.keras.layers.Dense(1, activation='sigmoid', input_shape=(X.shape[1],))])
model.compile(optimizer='sgd',loss='binary_crossentropy',metrics=['accuracy'])
model.fit(x_train, y_train, epochs=100)

loss, accuracy = model.evaluate(x_test, y_test, verbose=0)
print('Accuracy: {}'.format(accuracy))
